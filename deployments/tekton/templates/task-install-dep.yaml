apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: task-install-deps
  namespace: {{ .Values.projectName }}
spec:
  workspaces:
    - name: source
  params:
    - name: install-script
      description:  package script command (yarn install, pnpm add)
      type: string
    - name: post-install-script
      description: post install script commands
      type: string
      default: 'true'
  ## default gh status update params 
    - name: REPO_FULL_NAME
      description: |
        The GitHub repository full name, e.g.: tektoncd/catalog
      default: 'github.com'
      type: string
    - name: SHA
      description: |
        Commit SHA to set the status for.
      default: ''
      type: string
    - name: TARGET_URL
      description: |
        The target URL to associate with this status. This URL will be linked
        from the GitHub UI to allow users to easily see the source of the
        status.
      default: 'https://tekton.woovi-ops.example/'
      type: string
    - name: CONTEXT
      description: |
        The GitHub context, A string label to differentiate this status from
        the status of other systems. ie: "continuous-integration/tekton"
      default: 'continuous-integration/tekton-install-deps'
      type: string
    - name: STATE
      description: |
        The state of the status. Can be one of the following `error`,
        `failure`, `pending`, or `success`.
      type: string
      default: 'pending'
  steps:
    - name: install-deps
      image: node:20-bullseye
      workingDir: $(workspaces.source.path)
      script: |
        $(params.install-script)
        $(params.post-install-script)
        
        #write status to workspace
        echo "true" > /workspace/RESULT
    - name: update-status-result
      image: node:latest
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -xe
        
        export RESULT=$(cat /workspace/RESULT)
        echo $RESULT
        
        if [ "$RESULT" != true ]; then
        STATE=failure
        DESCRIPTION="step failed!"
        echo "Updating status to failure"
        else
        STATE=success
        DESCRIPTION="All good!"
        echo "Updating status to success"
        fi

        TOKEN={{ .Values.gh_token }}
        SHA=$(params.SHA)
                TARGET_URL=$(params.TARGET_URL)
        
        DATA="{\"state\": \"$STATE\", \"target_url\": \"$(params.TARGET_URL)\", \"description\": \"$DESCRIPTION\", \"context\": \"Woovi - CI/CD - install deps\"}"

        HEADER="Authorization: Bearer $TOKEN"
        HEADER+="\nAccept: application/vnd.github+json"
        HEADER+="\nX-GitHub-Api-Version: 2022-11-28"
        URL="https://api.github.com/repos/$(params.REPO_FULL_NAME)/statuses/$SHA" 
        curl --http1.1 -L -X POST -H "$(echo -e "$HEADER")" -d "$DATA" "$URL"
