apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kubernetes-actions
  namespace: {{ .Values.projectName }}
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/categories: Kubernetes
    tekton.dev/tags: CLI, kubectl
    tekton.dev/displayName: "kubernetes actions"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    This task is the generic kubectl CLI task which can be used
    to run all kinds of k8s commands
  workspaces:
    - name: manifest-dir
      optional: true
    - name: kubeconfig-dir
      optional: true
    - name: source
      optional: true
  results:
    - name: output-result
      description: some result can be emitted if someone wants to.
  params:
    - name: script
      description: The Kubernetes CLI script to run
      type: string
      default: "kubectl $@"
    - name: args
      description: The Kubernetes CLI arguments to run
      type: array
      default:
        - "help"
    - name: image
      default: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753 #image is huge
      description: Kubectl wrapper image
## default gh status update params 
    - name: REPO_FULL_NAME
      description: |
        The GitHub repository full name, e.g.: tektoncd/catalog
      default: 'github.com'
      type: string
    - name: SHA
      description: |
        Commit SHA to set the status for.
      default: ''
      type: string
    - name: TARGET_URL
      description: |
        The target URL to associate with this status. This URL will be linked
        from the GitHub UI to allow users to easily see the source of the
        status.
      default: 'https://tekton.woovi-ops.example/'
      type: string
    - name: CONTEXT
      description: |
        The GitHub context, A string label to differentiate this status from
        the status of other systems. ie: "continuous-integration/tekton"
      default: 'continuous-integration/tekton-install-deps'
      type: string
    - name: STATE
      description: |
        The state of the status. Can be one of the following `error`,
        `failure`, `pending`, or `success`.
      type: string
      default: 'pending'
    - name: pkg
      description: | 
        service to be deployed
      default: server
  steps:
    - name: kubectl
      image: $(params.image)
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash

        [[ "$(workspaces.manifest-dir.bound)" == "true" ]] && \
        cd $(workspaces.manifest-dir.path)

        [[ "$(workspaces.kubeconfig-dir.bound)" == "true" ]] && \
        [[ -f $(workspaces.kubeconfig-dir.path)/kubeconfig ]] && \
        export KUBECONFIG=$(workspaces.kubeconfig-dir.path)/kubeconfig

        $(params.script)
        
        #write status to workspace
        echo "true" > /workspace/RESULT-$(params.pkg)
      args:
        - "$(params.args)"
    - name: update-status-result
      image: node:latest
      onError: continue
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -xe
        
        # Generate a random number between 0 and 10
        random_sleep=$((RANDOM % 11))
        
        sleep $random_sleep

        export RESULT=$(cat /workspace/RESULT-$(params.pkg))
        echo $RESULT
        
        if [ "$RESULT" != true ]; then
        STATE=failure
        DESCRIPTION="step failed!"
        echo "Updating status to failure"
        else
        STATE=success
        DESCRIPTION="All good!"
        echo "Updating status to success"
        fi

        TOKEN={{ .Values.gh_token }}
        SHA=$(params.SHA)
                TARGET_URL=$(params.TARGET_URL)
        
        DATA="{\"state\": \"$STATE\", \"target_url\": \"$(params.TARGET_URL)\", \"description\": \"$DESCRIPTION\", \"context\": \"Woovi - CI/CD - $(params.pkg) stg deploy\"}"

        HEADER="Authorization: Bearer $TOKEN"
        HEADER+="\nAccept: application/vnd.github+json"
        HEADER+="\nX-GitHub-Api-Version: 2022-11-28"
        URL="https://api.github.com/repos/$(params.REPO_FULL_NAME)/statuses/$SHA" 
        curl --http1.1 -L -X POST -H "$(echo -e "$HEADER")" -d "$DATA" "$URL"

