apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: aws-cli
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/categories: CLI
    tekton.dev/tags: cli
    tekton.dev/displayName: "aws cli"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    This task performs operations on Amazon Web Services resources using aws.
  workspaces:
    - name: source
      optional: true
    - name: secrets
      optional: true
      mountPath: /root/.aws
  params:
    - name: SCRIPT
      description: The AWS script to run
      type: string
      default: "aws $@"
    - name: ARGS
      description: AWS cli arguments to be passed
      type: array
      default: ["help"]
    ## default gh status update params
    - name: REPO_FULL_NAME
      description: |
        The GitHub repository full name, e.g.: tektoncd/catalog
      default: "github.com"
      type: string
    - name: SHA
      description: |
        Commit SHA to set the status for.
      default: ""
      type: string
    - name: TARGET_URL
      description: |
        The target URL to associate with this status. This URL will be linked
        from the GitHub UI to allow users to easily see the source of the
        status.
      default: "https://tekton.woovi-ops.example/"
      type: string
    - name: CONTEXT
      description: |
        The GitHub context, A string label to differentiate this status from
        the status of other systems. ie: "continuous-integration/tekton"
      default: "continuous-integration/tekton-install-deps"
      type: string
    - name: STATE
      description: |
        The state of the status. Can be one of the following `error`,
        `failure`, `pending`, or `success`.
      type: string
      default: "pending"
    - name: pkg
      description: |
        service to be deployed
      default: server

  steps:
    - name: awscli
      workingDir: $(workspaces.source.path)
      image: docker.io/amazon/aws-cli:2.15.23 #tag: 2.0.52
      script: "$(params.SCRIPT)"
      args:
        - "$(params.ARGS)"
    - name: update-status-result
      image: node:latest
      onError: continue
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -xe

        # Generate a random number between 0 and 10
        random_sleep=$((RANDOM % 11))

        sleep $random_sleep

        STATE=success
        DESCRIPTION="All good!"
        TOKEN={{ .Values.gh_token }}
        SHA=$(params.SHA)
        TARGET_URL=$(params.TARGET_URL)

        DATA="{\"state\": \"$STATE\", \"target_url\": \"$(params.TARGET_URL)\", \"description\": \"$DESCRIPTION\", \"context\": \"Woovi - CI/CD - $(params.pkg) bucket stg deploy\"}"

        HEADER="Authorization: Bearer $TOKEN"
        HEADER+="\nAccept: application/vnd.github+json"
        HEADER+="\nX-GitHub-Api-Version: 2022-11-28"
        URL="https://api.github.com/repos/$(params.REPO_FULL_NAME)/statuses/$SHA" 
        curl --http1.1 -L -X POST -H "$(echo -e "$HEADER")" -d "$DATA" "$URL"
