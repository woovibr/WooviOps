apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-update-registry
  namespace: {{ .Values.projectName }}
spec:
  params:
    - name: IMAGE
      description: Reference of the image buildah will produce.
    - name: STORAGE_DRIVER
      description: Set buildah storage driver
      default: overlay
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
    - name: DOCKERFILE_CONTEXT_PATH
      description: Path for the context of DockerFile, from root to dockerfile path without file name
    - name: build_script
      description: Script command to build the base package
      default: ./packages/main/
    - name: image-tag
      description: tag generated by git clone task, commit sha
    - name: deploy-production
      description: if should push with production tag
      default: false
      
  workspaces:
    - name: source
  steps:
    - name: build-package
      image: node:20-bullseye
      workingDir: $(workspaces.source.path)
      script: |
        $(params.build_script)
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true
    - name: build-image
      image: quay.io/buildah/stable:v1.34.0
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -xe
        export COMMIT_SHA=$(params.image-tag)

        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          --build-arg=COMMIT_SHA=$COMMIT_SHA --build-arg SENTRY_RELEASE=$COMMIT_SHA --no-cache -f $(params.DOCKERFILE) -t $(params.IMAGE):$(params.image-tag) $(params.DOCKERFILE_CONTEXT_PATH)
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true
    - name: push-image
      image: quay.io/buildah/stable:v1.34.0
      workingDir: $(workspaces.source.path)
      script: |
        buildah push  --tls-verify=false $(params.IMAGE):$(params.image-tag) registry.container-registry:5000/$(params.IMAGE):$(params.image-tag)
        
        buildah push  --tls-verify=false $(params.IMAGE):$(params.image-tag) registry.container-registry:5000/$(params.IMAGE):staging
        

        if [[ $(params.deploy-production) == true ]]; then
          buildah push  --tls-verify=false $(params.IMAGE):$(params.image-tag) registry.container-registry:5000/$(params.IMAGE):production
        fi
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true
  volumes:
    - name: varlibcontainers
      emptyDir: {}
